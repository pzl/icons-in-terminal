#!/usr/bin/env python

import sys, os
from collections import namedtuple



class Icon(namedtuple('Icon',['group','abbrev','name','codepoint'])):
	def __str__(self):
		return f"{self.codepoint} {self.group}({self.abbrev}) {chr(int(self.codepoint,16))}  {self.name}"
		


def import_icons():
	icons = {}
	with open("build/mapping.txt","r") as f:
		for line in f:
			line = line.strip()
			if line[0] == "#":
				groupname = line[1:].split(":")[0]
			else:
				for x in line.split(";"):
					if not x: continue
					name,codepoint = x.split(":")
					ic = Icon(groupname,*name.split("_",maxsplit=1),codepoint)
					icons[codepoint] = ic
	return icons


def search_icons(icons,search):
	search = search.strip().lower()

	# check for literal codepoints
	if search.startswith("\\u"):
		search = search[2:]
	if len(search) == 4 and search in icons:
		return [icons[search]]


	# name search
	results = []
	for ic in icons.values():
		if search in ic.name or search in ic.group:
			results.append(ic)
	return results


def main():
	icons = import_icons()

	if len(sys.argv) == 1:
		[print(x) for x in icons.values()]
		return


	results = search_icons(icons,sys.argv[1])

	if not results:
		print("No icon found")
		return

	[print(x) for x in results]



if __name__ == "__main__":
	main()
